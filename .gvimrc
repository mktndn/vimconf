" win / linux (gtk) compatible .gvimrc

"
""""" GUI options. 	default "gmrLtT"   (MS-Windows)
if has("gui_running")
    set guioptions=""
    " set guioptions+=a		" autoselect into clipbord in visual mode.
    " set guioptions+=c		" use console dialog
    " set guioptions+=e		" use GUI tab
    " set guioptions+=f		" foreground
    " set guioptions+=g		" Grey invalid menu items.
    " set guioptions+=m		" use menu bar
    " set guioptions+=t		" tearoff menu
    " set guioptions+=T		" Toolbar
    " set guioptions+=r		" Right hand scrollbar is always present
    				" when there is vertically split window,
    " set guioptions+=L		" Left hand scrollbar is present
    				" when there is vertically split window.
endif

" lazy method of appending this onto your .vimrc ":w! >> ~/.vimrc"
" ------------------------------------------------------------------
" this block of commands has been autogenerated by solarized.vim and
" includes the current, non-default Solarized option values.
" To use, place these commands in your .vimrc file (replacing any
" existing colorscheme commands). See also ":help solarized"

" ------------------------------------------------------------------
" Solarized Colorscheme Config
" ------------------------------------------------------------------
let g:solarized_hitrail=0    "default value is 0
syntax enable
set background=light
colorscheme solarized
" ------------------------------------------------------------------

" The following items are available options, but do not need to be
" included in your .vimrc as they are currently set to their defaults.

" let g:solarized_termtrans=0
" let g:solarized_degrade=0
" let g:solarized_bold=1
" let g:solarized_underline=1
" let g:solarized_italic=1
" let g:solarized_termcolors=16
" let g:solarized_contrast="normal"
" let g:solarized_visibility="normal"
" let g:solarized_diffmode="normal"
" let g:solarized_menu=1

"
" IMEの状態によってカーソルの色を変える
if has('multi_byte_ime')
    highlight Cursor guifg=NONE guibg=#859900
    highlight CursorIM guifg=NONE guibg=#d33682
endif

" 終了時のウィンドウ位置を保存、復元する
let g:save_window_file = expand('~/.vimwinpos')
augroup SaveWindow
  autocmd!
  autocmd VimLeavePre * call s:save_window()
  function! s:save_window()
    let options = [
      \ 'set columns=' . &columns,
      \ 'set lines=' . &lines,
      \ 'winpos ' . getwinposx() . ' ' . getwinposy(),
      \ ]
    call writefile(options, g:save_window_file)
  endfunction
augroup END
if filereadable(g:save_window_file)
  execute 'source' g:save_window_file
endif

if has("unix")
	" set GUI fonts
	set guifont=Inconsolata\ Bold\ 11
	" set guifontwide=Migu\ 1M\ Bold\ 12
	set guifontwide=Noto\ Sans\ Mono\ CJK\ JP\ Bold\ 11
	set linespace=-3

elseif has("win32")
	" Alt-Space is System menu
	if has("gui")
	  noremap <M-Space> :simalt ~<CR>
	  inoremap <M-Space> <C-O>:simalt ~<CR>
	  cnoremap <M-Space> <C-C>:simalt ~<CR>
	endif

	" set GUI fonts
	" set guifont=Anonymous_Pro:h10:cANSI
	" set guifont=Consolas:h10:b:cANSI
	" set guifont=Noto_Mono:h10:cANSI:qDRAFT

	set guifont=Ricty_Diminished:h11:b
	" " guifontwideはutf-8の時のみ有効
	"set guifontwide=IPAGothic:h10:w5:b:cDEFAULT,Noto_Sans_Mono_CJK_JP_Regular


endif


set novb
set vb t_vb=

set mousehide		" Hide the mouse when typing text

" Make shift-insert work like in Xterm
map <S-Insert> <MiddleMouse>
map! <S-Insert> <MiddleMouse>
